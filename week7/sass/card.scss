//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;

*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

//styles to draw a basic outline of a card
.card {
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}

//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}
.number {
    text-align: center;
    font-size: $font-size-number;

//an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

.row {
  display: grid;
  grid-template-columns: 12.5% repeat(3, 25%) 12.5%;
  grid-template-rows: repeat(4, 25%);
  height: 100%;
  place-items: center;
}

.cell:nth-child(2) {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
}

.cell:nth-child(3) {
    grid-column: 4 / 5;
    grid-row: 1 / 2;
}

.cell:nth-child(4) {
    grid-column: 1 / 6;
    grid-row: 2 / 3;
}
.cell:nth-child(5) {
    grid-column: 2 / 3;
    grid-row: 3 / 4;
}

.cell:nth-child(6) {
    grid-column: 2 / 3;
    grid-row: 4 / 5;
}

.cell:nth-child(7) {
    grid-column: 4 / 5;
    grid-row: 3 / 4;
}

.cell:nth-child(8) {
    grid-column: 4 / 5;
    grid-row: 4 / 5;
}
.cell:nth-child(1) {
    grid-column: 5 / 6;
    grid-row: 4 / 5;
}

@supports (display: grid) {

    //variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;
$pink: palevioletred;


 //variables
 $num-columns : 8;
 $one-column : 100% / $num_columns;
 $loop-start: 1;
 $loop-end: $num-columns +1;


@mixin col($span-num) {
    flex: 0 0 12.5% * $span-num;
    }
    
    @mixin offset($offset-num) {
    margin-left: 12.5% * $offset-num;
    }

    .col-1 {
        @include col(1);
        }

        //make column classes 
    @for $index from $loop-start to $loop-end {
        .col-#{$index} {
            @include col($index);
        }
    }
    
    //make offset classes
    @for $index from $loop-start to $loop-end {
        .offset-#{$index} {
            @include offset($index);
        }
    }
*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

//styles to draw a basic outline of a card
.card {
    display: grid;
    border: 1px solid grey;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
    background-color: $pink;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: .5em;
}



//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}

.row {
  display: grid;
  align-items: center;
  align-content: space-between;
  height: 100%;
}

.col-3 {

}

$one-column: 12.5%;
       @mixin col($span-num) {
        flex: 0 0 $one-column * $span-num;
    }
    
    @mixin offset($offset-num) {
        margin-left: $one-column * $offset-num;
    }
}